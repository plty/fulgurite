---
import { type Lang } from "$components/editor/lang-support";
import { FulguriteIsland } from "$components/Fulgurite.tsx";
import { Foil } from "$components/Foil";
import { parseInfo } from "$components/Fencey";
import { cppCode } from "$utils/constants.ts";
import { compile } from "$utils/godbolt.ts";

interface Props {
    content: string;
    language: Lang;
}

const { content, language: infoString } = Astro.props;
const { state, config } = parseInfo(infoString);

const [compiledCpp] = await Promise.all(
    [cppCode].map((code) => {
        return compile(["cpp", "clang1701"], code, {
            opts: "-std=c++2b -O3 -march=sapphirerapids",
            asmSyntax: "intel",
        });
    }),
);

const hint = { [cppCode]: compiledCpp };
---

{
    state == "fence" && (
        <div class="not-prose text-sm">
            <Foil code={content} lineGroup={{}} fenceConfig={config} />
        </div>
    )
}

{
    state == "fulgurite" && (
        <dev class="my-5 flex w-full justify-center text-sm">
            <div class="w-screen max-w-7xl shrink-0 px-4">
                <div class="border-night-500 bg-night-600 h-3 border-x border-b border-t" />
                <div class="border-night-500 bg-night-700 border-x border-b text-sm">
                    <FulguriteIsland
                        hint={hint}
                        fenceConfig={config}
                        client:visible
                    />
                </div>
            </div>
        </dev>
    )
}
